$( ".odc-select-list" ).each( function () { for ( $( this ).val( null ), $( this ).wrap( '<div class="odc-select-list_container"></div>' ), $( this ).before( $( "<div/>", { class: "odc-select-list_label", text: $( this ).attr( "rel" ), click: function ( s ) { s.stopPropagation(), $( ".odc-select-list_decoy" ).hide(), $( this ).siblings( ".odc-select-list_decoy" ).show(), $( this ).closest( ".odc-select-list_container" ).hasClass( ".active" ) || $( this ).closest( ".odc-select-list_container" ).addClass( "active" ) } } ) ), $( this ).after( '<ul class="odc-select-list_decoy"></ul>' ), $( this ).after( '<div class="odc-select-list_icon"></div>' ), $( this ).siblings( ".odc-select-list_decoy" ).hide(), $( this ).after( $( "<div/>", { class: "odc-select-list_value", text: $( this ).val(), click: function ( s ) { s.stopPropagation(), $( this ).siblings( ".odc-select-list_decoy" ).show(), $( this ).closest( ".odc-select-list_container" ).hasClass( ".active" ) || $( this ).closest( ".odc-select-list_container" ).addClass( "active" ) } } ) ), i = 0; i <= $( this ).children( "option" ).length; i++ ) 0 == i && $( "<li/>", { class: "odc-select-list_option odc-select-list_option--none", text: "None", rel: "", click: function ( s ) { s.stopPropagation(), $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list" ).val( null ), $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_value" ).text( null ), $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_label" ).hasClass( "odc-select-list_label--selected" ) && $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_label" ).removeClass( "odc-select-list_label--selected" ), $( this ).closest( ".odc-select-list_decoy" ).hide(), $( this ).closest( ".odc-select-list_container" ).removeClass( "active" ) } } ).appendTo( $( this ).siblings( ".odc-select-list_decoy" ) ), $( "<li/>", { class: "odc-select-list_option", text: $( this ).children( "option" ).eq( i ).text(), rel: $( this ).children( "option" ).eq( i ).val(), click: function ( s ) { s.stopPropagation(), $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list" ).val( $( this ).attr( "rel" ) ), $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_value" ).text( $( this ).text() ), $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_label" ).hasClass( "odc-select-list_label--selected" ) ? "" == $( this ).attr( "rel" ) && $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_label" ).removeClass( "odc-select-list_label--selected" ) : $( this ).closest( ".odc-select-list_decoy" ).siblings( ".odc-select-list_label" ).addClass( "odc-select-list_label--selected" ), $( this ).closest( ".odc-select-list_decoy" ).hide(), $( this ).closest( ".odc-select-list_container" ).removeClass( "active" ) } } ).appendTo( $( this ).siblings( ".odc-select-list_decoy" ) );
	$( this ).hide(), $( "body" ).click( function () { $( ".odc-select-list_decoy" ).hide(), $( ".odc-select-list_container" ).removeClass( "active" ) } ) } );

function inputFocusOnValue( n, t ) { inputHasValue( n ) ? $( n ).addClass( t ) : $( n ).hasClass( t ) && $( n ).removeClass( t ) }

function inputHasValue( n ) { return 0 < $( n ).filter( function () { return $( this ).val() } ).length } $( document ).ready( function () { $( ".odc-text-input input" ).each( function () { var n = $( this ),
			t = "has-content";
		inputFocusOnValue( n, t ), $( n ).change( function () { inputFocusOnValue( n, t ) } ) } ) } ), $( document ).on( { load: function () { $( ".odc-text-input input" ).each( function () { inputFocusOnValue( $( this ), "has-content" ) } ) }, change: function () { $( ".odc-text-input input" ).each( function () { inputFocusOnValue( $( this ), "has-content" ) } ) } }, ".odc-text-input input" ), $( document ).on( "change", ".odc-text-input input", function () { $( ".odc-text-input input" ).each( function () { var n = $( this ),
			t = "has-content";
		inputFocusOnValue( n, t ), $( n ).change( function () { inputFocusOnValue( n, t ) } ) } ) } ), $( document ).on( "change", ".odc-text-input input", function () {} );

! function () {
	function e() { var e = document.getElementById( this.options.id ),
			t = this.options.grid,
			s = null; if ( 1 == t ? s = "linear" : 1 < t && ( s = "grid odc-grid-" + t ), e.className = "odc-list " + this.options.className + " " + s, 0 < e.getElementsByTagName( "li" ).length )
			for ( var i = e.getElementsByTagName( "li" ), n = 0; n < i.length; ++n ) { var o = i[ n ];
				o.parentElement.className.includes( "odc-list" ) && ( o.className = "odc-list_item" ) }
		if ( "true" == this.options.search ) { var a = document.createElement( "div" );
			a.className = "odc-text-input", a.innerHTML = '<input class="effect-20" type="text" placeholder="" id="odc-' + this.options.id + '"><label for="odc-' + this.options.id + '">Search List</label><span class="focus-border"><i></i></span>'; var l = this.options.id;
			a.addEventListener( "keyup", function ( e ) { console.log( "key up" ),
					function ( e, t ) { var s, i, n, o, a;
						s = document.getElementById( e ), i = s.value.toUpperCase(), n = document.getElementById( t ), o = n.getElementsByTagName( "li" ); for ( var l = 0; l < o.length; l++ )( a = o[ l ] ) && ( -1 < a.innerHTML.toUpperCase().indexOf( i ) ? o[ l ].style.display = "" : o[ l ].style.display = "none" ) }( "odc-" + l, l ) } ), e.prepend( a ) } } this.odcList = function () { this.list = null, this.selector = "odc-list";
		arguments[ 0 ] && "object" == typeof arguments[ 0 ] && ( this.options = function ( e, t ) { var s; for ( s in t ) t.hasOwnProperty( s ) && ( e[ s ] = t[ s ] ); return e }( { id: "list", className: "", source: "", listItems: "", sort: "true", search: "false", export: "csv", pagination: "", reorder: "true", grid: "1" }, arguments[ 0 ] ) ),
			function () { switch ( this.options.source ) {
				case "html":
					e.call( this ); break;
				case "json":
				case "js":
					break;
				default:
					e.call( this ) } }.call( this ) } }();
! function () {
	function e() { var e;
		document.createDocumentFragment(), document.createElement( "div" ).className = "odc-menu-wrapper", "horizontal" == this.options.type ? e = "odc-horiz-" : "vertical" == this.options.type && ( e = "odc-vert-" ); var t = document.getElementsByClassName( this.selector ); if ( 0 < t.length ) { for ( var n = t.item( 0 ).getElementsByTagName( "li" ), o = 0; o < n.length; ++o ) { var s = n[ o ];
				1 < s.childNodes.length ? s.className = e + "menuItem hasChild" : "odc-menu" == s.parentNode.className ? s.className += e + "menuItem" : s.parentNode.className = e + "menuItem_sub" } t.item( 0 ).className += " " + e + "menu" } } this.odcMenu = function () { this.menu = null;
		this.selector = "odc-menu";
		arguments[ 0 ] && "object" == typeof arguments[ 0 ] && ( this.options = function ( e, t ) { var n; for ( n in t ) t.hasOwnProperty( n ) && ( e[ n ] = t[ n ] ); return e }( { type: "horizontal", position: "top", menuAlign: "left", menuColor: "#fff", textColor: "#666", className: "", sticky: !1 }, arguments[ 0 ] ) ) }, odcMenu.prototype.open = function () { e.call( this ) }, odcMenu.prototype.init = function () { 0 < document.getElementsByClassName( this.selector ).length ? ( e.call( this ), function () { if ( "vertical" == this.options.type ) { var e = document.getElementsByClassName( "hasChild" ); if ( 0 < e.length )
					for ( var t = 0; t < e.length; t++ ) e.item( t ).addEventListener( "click", function () { this.classList.toggle( "active" ) } ) } }.call( this ) ) : console.log( 'Please define "' + this.selector + '" to a list to make it a menu' ) } }();
! function () { this.odcToast = function () { this.closeButton = null;
		this.toast = null;
		arguments[ 0 ] && "object" == typeof arguments[ 0 ] && ( this.options = function ( t, o ) { var e; for ( e in o ) o.hasOwnProperty( e ) && ( t[ e ] = o[ e ] ); return t }( { title: "", content: "", className: "", toastType: " default ", icon: !0, closeButton: !1, position: " top-right ", width: 250, delay: !0, waitTime: 4500, animate: "fadeInRight" }, arguments[ 0 ] ) ) }, odcToast.prototype.open = function () {
		( function () { var t, o, e, s, n;
			t = "string" == typeof this.options.content ? this.options.content : this.options.content.innerHTML;
			e = document.createDocumentFragment(), this.toast = document.createElement( "div" ), this.toast.className = "odc-toast " + this.options.toastType + " " + this.options.className + " " + this.options.animate, this.toast.style.width = this.options.width + "px", this.toast.style.maxWidth = this.options.width + "px", !0 === this.options.icon && ( this.icon = document.createElement( "div" ), this.icon.className = "odc-toast-icon", this.toast.appendChild( this.icon ) );!0 === this.options.closeButton && ( this.closeButton = document.createElement( "button" ), this.closeButton.className = "odc-toast-close odc-toast-close-button", this.closeButton.innerHTML = "Ã—", this.toast.appendChild( this.closeButton ) ); if ( ( n = document.createElement( "div" ) ).className = "odc-toast-content_wrapper", 0 < this.options.title.length ) { var i = document.createElement( "div" );
				i.className = "odc-toast_title", i.innerHTML = this.options.title, n.append( i ) }( o = document.createElement( "div" ) ).className = "odc-toast-content", o.innerHTML = t, n.append( o ), this.toast.appendChild( n ); var a = this.options.position;
			0 < ( s = document.getElementsByClassName( "odc-toast-wrapper " + a ) ).length ? s.item( 0 ).append( this.toast ) : ( ( s = document.createElement( "div" ) ).className = "odc-toast-wrapper " + a, s.prepend( this.toast ), e.appendChild( s ), document.body.appendChild( e ) ) } ).call( this ), window.getComputedStyle( this.toast ).height, this.toast.className = this.toast.className + ( this.toast.offsetHeight > window.innerHeight ? " odc-toast-open odc-toast-anchored" : " odc-toast-open" ) }, odcToast.prototype.close = function () { this.toast.parentNode.removeChild( this.toast ) } }();
! function () { this.odcTooltip = function () { this.tooltip = null;
		arguments[ 0 ] && "object" == typeof arguments[ 0 ] && ( this.options = extendDefaults( { className: "", content: "", animation: "", closeButton: !1, onEvent: "", position: "" }, arguments[ 0 ] ) ) } }();